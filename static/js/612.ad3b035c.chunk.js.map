{"version":3,"file":"static/js/612.ad3b035c.chunk.js","mappings":"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","sources":["hooks/useToast.ts","components/common/Toast.tsx","components/product/Product.tsx","components/product/ProductList.tsx","utils/suspense.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport const useToast = () => {\n  const [isOpenToast, setIsOpenToast] = useState(false);\n\n  const openToast = () => setIsOpenToast(true);\n  const closeToast = () => setIsOpenToast(false);\n\n  return { isOpenToast, openToast, closeToast };\n};\n","import { styled, css, keyframes } from 'styled-components';\n\ninterface Props {\n  isOpenToast: boolean;\n  closeToast: () => void;\n  message: string;\n}\n\nexport default function Toast({ isOpenToast = false, closeToast, message }: Props) {\n  if (isOpenToast) {\n    setTimeout(() => {\n      closeToast();\n    }, 2000);\n  }\n\n  return <Style.Wrapper isOpenToast={isOpenToast}>{message}</Style.Wrapper>;\n}\n\nconst ShowAndHide = keyframes` \n  0% {\n    opacity: 0;\n  }\n  70%{\n    opacity: 1;\n  }\n  80%{\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst Style = {\n  Wrapper: styled.div<{ isOpenToast: boolean }>`\n    justify-content: center;\n    align-items: center;\n\n    width: 300px;\n    height: 50px;\n\n    position: fixed;\n    top: 90%;\n    left: 50%;\n    transform: translateX(-50%);\n    border: none;\n    border-radius: 7px;\n    background-color: var(--toast-box-color);\n\n    font-size: 14px;\n    color: var(--grey-100);\n\n    z-index: 1000;\n\n    ${({ isOpenToast }) => {\n      return isOpenToast\n        ? css`\n            display: flex;\n            animation: ${ShowAndHide} 2s forwards;\n          `\n        : css`\n            display: none;\n          `;\n    }}\n  `,\n};\n","import { styled } from 'styled-components';\nimport { CartIcon } from '../../assets/svg';\nimport { ProductInfo } from '../../types';\nimport { PRODUCT } from '../../constants';\nimport { useCart } from '../../hooks/useCart';\nimport { useToast } from '../../hooks/useToast';\nimport Stepper from '../Stepper';\nimport Toast from '../common/Toast';\nimport Price from '../common/Price';\n\ninterface Props {\n  productInfo: ProductInfo;\n}\n\nexport default function Product({ productInfo }: Props) {\n  const { name, price, imageUrl } = productInfo;\n  const { addToCart, getCartItem, updateProductQuantity } = useCart(productInfo);\n  const { isOpenToast, openToast, closeToast } = useToast();\n  const cartItem = getCartItem();\n\n  const handleCartClick = () => {\n    addToCart();\n    openToast();\n  };\n\n  return (\n    <Style.Container>\n      <Style.ProductImageWrapper>\n        <Style.ProductImage src={imageUrl} alt={name} loading=\"lazy\" />\n      </Style.ProductImageWrapper>\n      <Style.ProductInfo>\n        <Style.ProductNameAndStepperContainer>\n          <Style.ProductName title={name}>{name}</Style.ProductName>\n          {cartItem ? (\n            <Stepper\n              quantity={cartItem.quantity}\n              maxQuantity={PRODUCT.MAX_COUNT}\n              updateQuantity={updateProductQuantity}\n            />\n          ) : (\n            <Style.CartIconWrapper onClick={handleCartClick} aria-label=\"장바구니 추가\">\n              <CartIcon fill=\"#AAAAAA\" />\n            </Style.CartIconWrapper>\n          )}\n        </Style.ProductNameAndStepperContainer>\n        <Price price={price} size={'large'} label={`${name}`} />\n      </Style.ProductInfo>\n      <Toast\n        isOpenToast={isOpenToast}\n        closeToast={closeToast}\n        message=\"✨ 상품을 장바구니에 담았습니다.\"\n      />\n    </Style.Container>\n  );\n}\n\nconst Style = {\n  Container: styled.div`\n    cursor: pointer;\n  `,\n\n  ProductImageWrapper: styled.div`\n    position: relative;\n    width: 100%;\n    padding-bottom: 100%;\n    overflow: hidden;\n  `,\n\n  ProductImage: styled.img`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  `,\n\n  ProductInfo: styled.div`\n    padding: 18px 0 0 0;\n    letter-spacing: 0.5px;\n  `,\n\n  ProductNameAndStepperContainer: styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-bottom: 8px;\n  `,\n\n  ProductName: styled.p`\n    max-width: 120px;\n    overflow: hidden;\n\n    font-size: 16px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  `,\n\n  CartIconWrapper: styled.button`\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: inherit;\n    height: 30px;\n\n    cursor: pointer;\n  `,\n};\n","import { styled } from 'styled-components';\nimport { PRODUCTS_BASE_URL } from '../../constants';\nimport { ProductInfo } from '../../types';\nimport { fetchApi } from '../../api';\nimport { createPromise } from '../../utils/suspense';\nimport Product from './Product';\n\nconst ProductListPromise = createPromise<ProductInfo[]>(fetchApi(PRODUCTS_BASE_URL));\n\nexport default function ProductList() {\n  const productList = ProductListPromise.read();\n\n  return (\n    <Style.Container>\n      {productList.map((product) => (\n        <li key={product.id}>\n          <Product productInfo={product} />\n        </li>\n      ))}\n    </Style.Container>\n  );\n}\n\nconst Style = {\n  Container: styled.ul`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-column-gap: 45px;\n    grid-row-gap: 60px;\n\n    /* 태블릿 */\n    @media screen and (max-width: 991px) {\n      grid-template-columns: repeat(3, 1fr);\n    }\n\n    /* 모바일 */\n    @media screen and (max-width: 767px) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  `,\n};\n","// Suspense 사용을 위한 promise 통합 객체를 만드는 함수\nexport const createPromise = <T>(promise: Promise<T>) => {\n  let status = 'pending';\n  let result: T | Error;\n\n  let suspender = promise.then(\n    (res) => {\n      status = 'success';\n      result = res;\n    },\n    (err) => {\n      status = 'error';\n      result = err;\n    }\n  );\n\n  return {\n    read: () => {\n      if (status === 'pending') throw suspender;\n      else if (status === 'error') throw result;\n      else return result as T; // status === 'success'\n    },\n  };\n};\n"],"names":["useToast","_useState","useState","_useState2","_slicedToArray","isOpenToast","setIsOpenToast","openToast","closeToast","Toast","_ref","_ref$isOpenToast","message","setTimeout","_jsx","Style","Wrapper","children","ShowAndHide","keyframes","_templateObject","_taggedTemplateLiteral","styled","_templateObject2","_ref2","css","_templateObject3","_templateObject4","Product","productInfo","name","price","imageUrl","_useCart","useCart","addToCart","getCartItem","updateProductQuantity","_useToast","cartItem","_jsxs","Container","ProductImageWrapper","ProductImage","src","alt","loading","ProductInfo","ProductNameAndStepperContainer","ProductName","title","Stepper","quantity","maxQuantity","PRODUCT","updateQuantity","CartIconWrapper","onClick","CartIcon","fill","Price","size","label","concat","_templateObject5","_templateObject6","_templateObject7","ProductListPromise","promise","result","status","suspender","then","res","err","read","createPromise","fetchApi","PRODUCTS_BASE_URL","ProductList","productList","map","product","id"],"sourceRoot":""}